export BSPWM_MOD=super

# terminal emulator
super + Return
	gnome-terminal

# program launcher
super + space
    rofi -modi window,drun,run \
        -font 'D2Coding NF 11' \
        -show drun \
        -show-icons \
        -sidebar-mode \
        -terminal alacritty \
        -color-window '#000000, #000000, #000000' \
        -color-normal '#000000, #b3e774, #000000, #b3e774, #000000' \
        -color-active '#000000, #b3e774, #000000, #b3e774, #000000' \
        -color-urgent '#000000, #b3e774, #000000, #b3e774, #000000'

# make sxhkd reload its configuration files:
super + alt + r
	pkill -USR1 -x sxhkd; bspc wm -r; polybar -r polybar

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
# super + ctrl + {m,x,y,z}
#     bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# move/resize
#

super + ctrl + {h,j,k,l}
  n=10; \
  { d1=left;   d2=right;  dx=-$n; dy=0;   \
  , d1=bottom; d2=top;    dx=0;   dy=$n;  \
  , d1=top;    d2=bottom; dx=0;   dy=-$n; \
  , d1=right;  d2=left;   dx=$n;  dy=0;   \
  } \
  bspc node --resize $d1 $dx $dy || bspc node --resize $d2 $dx $dy
